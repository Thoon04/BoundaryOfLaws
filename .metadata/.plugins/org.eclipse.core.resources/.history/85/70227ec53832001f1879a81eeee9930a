package boundaryOfLaws.persistance;

import java.sql.PreparedStatement;

public class LawerRepository {
		public static Connection con=null;
		static {
			con= MyConnection.getConnection();
		}
		//insert
		public int add(Lawer lawer) {
			int result=0;
			String sql = "INSERT INTO lawer(name,address,copyright_contact,contact_email) VALUES(?,?,?,?)";
			try {
				PreparedStatement ps=con.prepareStatement(sql);
				ps.setString(1, author.getName());
				ps.setString(2, author.getAddress());
				ps.setString(3, author.getCopyright_contact());
				ps.setString(4, author.getContact_email());
				
				result=ps.executeUpdate();
			}catch(SQLException e){
				result=0;
				System.out.println("Author insert error:" + e);
			}
			return result;
		}
		
		//update
		public int edit(Author author) {
			int result = 0;
			String sql = "UPDATE author Set name=?, address=?, copyright_contact=?, contact_email=? where id=?";
			try {
				PreparedStatement ps=con.prepareStatement(sql);
				ps.setString(1, author.getName());
				ps.setString(2, author.getAddress());
				ps.setString(3, author.getCopyright_contact());
				ps.setString(4, author.getContact_email());
				ps.setInt(5, author.getId());
				
				result=ps.executeUpdate();
			}catch(SQLException e){
				result=0;
				System.out.println("Author Edit error:" + e);
			}
			return result;
		}
		
		//delete
		public int delete(int id) {
			int result = 0;
			String sql = "DELETE FROM author WHERE id=?";
			try {
				PreparedStatement ps= con.prepareStatement(sql);
				ps.setInt(1, id);
				
				result = ps.executeUpdate();
			}catch(SQLException e){
				result = 0;
				System.out.println("Author Delete error:" + e);
			}return result;	
		}
		
		//getall
		public List<Author>getAll(){
			List<Author> authors = new ArrayList<>();
			String sql = "SELECT * FROM author";
			try {
				PreparedStatement ps = con.prepareStatement(sql);
				 ResultSet rs = ps.executeQuery();
				 while(rs.next()) {
					 Author author = new Author();
					 author.setId(rs.getInt("id"));
					 author.setName(rs.getString("name"));
					 author.setAddress(rs.getString("address"));
					 author.setCopyright_contact(rs.getString("copyright_contact"));
					 author.setContact_email(rs.getString("contact_email"));
					 authors.add(author);

				 }
			}catch(SQLException e) {
				System.out.println("Author select error:" + e);
			}
			return authors;
		}
		
		//getOne
		public Author getById(int id){
			Author author = new Author();
			String sql = "SELECT * FROM author WHERE id=?";
			try {
				PreparedStatement ps = con.prepareStatement(sql);
				ps.setInt(1, id);
				 ResultSet rs = ps.executeQuery();
				 while(rs.next()) {
					 author.setId(rs.getInt("id"));
					 author.setName(rs.getString("name"));
					 author.setAddress(rs.getString("address"));
					 author.setCopyright_contact(rs.getString("copyright_contact"));
					 author.setContact_email(rs.getString("contact_email"));

				 }
			}catch(SQLException e) {
				author = null;
				System.out.println("Author select one error:" + e);
			}
			return author;
		}
	}




